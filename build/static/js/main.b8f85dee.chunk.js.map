{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/NavBar/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","lose","onClick","clickedOrNot","id","alt","name","src","image","occupation","location","Wrapper","children","NavBar","message","counter","high_score","App","state","friends","count","highScore","shuffleFriends","_this","sort","Math","random","_this$state","i","console","log","clicked","concat","toUpperCase","resetGame","setState","_this2","this","components_NavBar","components_Wrapper","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b8f85dee.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className={props.lose ? \"card shake\" : \"card\"}>\n      <div className=\"img-container\" onClick={() => props.clickedOrNot(props.id)} >\n        <img alt={props.name} src={props.image}/>\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Address:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"shake wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction NavBar(props) {\n  return (\n    <nav>\n      <ul>\n\n        <li><strong>Clicky Game</strong></li>\n        <li className={props.lose !== null ? \n        (props.lose ? \"message text-danger\" : \"message\" ) : \"message\"} ><span>{props.message}</span></li>\n        {/* <li className={props.lose ? \"message text-danger\" : \"message text-success\"}><span>{props.message}</span></li> */}\n        <li>Score: <span>{props.counter}</span> | Top Score: <span>{props.high_score}</span></li>\n\n      </ul>\n    </nav>\n  )\n}\n\nexport default NavBar;\n\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport NavBar from \"./components/NavBar\";\nimport friends from \"./friends.json\";\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    friends,\n    count: 0,\n    message: \"Careful!  Don't click the same image twice!\",\n    highScore: 0,\n    lose : false\n  };\n\nshuffleFriends = () => {\n  return this.state.friends.sort(()=>Math.random() - 0.5)\n}\n\nclickedOrNot = (id) => {\n\n  let {friends, count, message, highScore, lose} = this.state;\n\n  friends = this.shuffleFriends();\n  console.log(id);\n  for (var i in friends) {\n    if (friends[i].id === id) {\n      if (friends[i].clicked) {\n        count = 0;\n        message = `Whoops. You already clicked ${friends[i].name.toUpperCase()}!`;\n        lose = true;\n        this.resetGame();\n      } else {\n        count++;\n        message = \"Keep clicking!\"\n        friends[i].clicked = true;\n        lose = false;\n        if (count > highScore) {\n          highScore = count;\n          message = \"New High Score!  Keep at it!\";\n        }\n      } \n    }\n  }\n\n  this.setState({\n    friends, count, message, highScore, lose\n  })\n\n}\n\nresetGame = () => {\n  for (var i in friends) {\n    friends[i].clicked = false;\n  }\n  this.setState({friends, count: 0})\n}\n\n//another shuffle function \n\n// shuffleFriends = (source, id) => { \n\n//   var currentIndex = source.length, temporaryValue, randomIndex;\n\n//   while (0 !== currentIndex) {\n//     randomIndex = Math.floor(Math.random() * currentIndex);\n//     currentIndex -= 1;\n//     temporaryValue = source[currentIndex];\n//     source[currentIndex] = source[randomIndex];\n//     source[randomIndex] = temporaryValue;\n//   }\n\n//   // return source;\n//   this.setState({\n//     friends: source,\n//     count: this.state.count + 1,\n//     message: \"Keep clicking!\"\n//   });\n  \n// }\n\n  render() {\n    return (\n      <div>\n      <NavBar lose={this.state.lose} counter={this.state.count} high_score={this.state.highScore} message={this.state.message} />\n      <Wrapper>\n        {this.state.friends.map(friend => (\n        <FriendCard\n              id={friend.id}\n              key={friend.id}\n              friends={this.state.friends}\n              name={friend.name}\n              image={friend.image}\n              location={friend.location}\n              occupation={friend.occupation}\n              clicked={friend.clicked}\n              clickedOrNot={this.clickedOrNot}\n              lose={this.state.lose}\n            />\n        ))}\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}